apply plugin: 'com.android.library'

android {
    compileSdkVersion projectCompileSdkVersion
    buildToolsVersion "${projectBuildToolsVersion}"

    defaultConfig {
        minSdkVersion projectMinSdkVersion
        targetSdkVersion projectTargetSdkVersion
        versionCode projectVersionCode
        versionName applicationVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    libraryVariants.all { variant -> renameArtifact(variant, "${apiStandaloneName}-${defaultConfig.versionName}") }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.4.0'
    testCompile 'junit:junit:4.12'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
}